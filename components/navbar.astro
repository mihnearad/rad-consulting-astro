---
import { Image } from "astro:assets";
import Logo from "/public/logo_raddigitalsolutions.png";
---

<!-- ============================================ --><!--                 Navigation                   --><!-- ============================================ -->
<header id="cs-navigation">
  <div class="cs-container">
    <!--Nav Logo-->
    <a href="/#home" class="cs-logo" aria-label="back to home">
      <Image src={Logo} alt="RAD Digital Solutions Logo" width={190} height={112} />
    </a>
    <!--Navigation List-->
    <nav class="cs-nav" role="navigation">
      <!--Mobile Nav Toggle-->
      <button class="cs-toggle" aria-label="mobile menu toggle">
        <div class="cs-box" aria-hidden="true">
          <span class="cs-line cs-line1" aria-hidden="true"></span>
          <span class="cs-line cs-line2" aria-hidden="true"></span>
          <span class="cs-line cs-line3" aria-hidden="true"></span>
        </div>
      </button>
      <!-- We need a wrapper div so we can set a fixed height on the cs-ul in case the nav list gets too long from too many dropdowns being opened and needs to have an overflow scroll. This wrapper acts as the background so it can go the full height of the screen and not cut off any overflowing nav items while the cs-ul stops short of the bottom of the screen, which keeps all nav items in view no matter how many there are-->
      <div class="cs-ul-wrapper">
        <ul id="cs-expanded" class="cs-ul" aria-expanded="false">
          <li class="cs-li">
            <a href="/#home" class="cs-li-link"> Home </a>
          </li>
          <li class="cs-li">
            <a href="/#use-cases" class="cs-li-link">Use Cases</a>
          </li>
          <li class="cs-li cs-dropdown" tabindex="0">
            <span class="cs-li-link">
              Services
              <img
                src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/down.svg"
                alt="dropdown icon"
                class="cs-drop-icon"
                aria-hidden="true"
                decoding="async"
                width="15"
                height="15"
              />
            </span>
            <ul class="cs-drop-ul">
              <li class="cs-drop-li">
                <a href="/services/it-consulting" class="cs-li-link cs-drop-link">IT Consulting & Networking</a>
              </li>
              <li class="cs-drop-li">
                <a href="/services/project-management" class="cs-li-link cs-drop-link">Project Management Solutions</a>
              </li>
              <li class="cs-drop-li">
                <a href="/services/data-analysis" class="cs-li-link cs-drop-link">Data Analysis</a>
              </li>
            </ul>
          </li>
          <li class="cs-li">
            <a href="/#about" class="cs-li-link"> About </a>
          </li>
          <li class="cs-li">
            <a href="/#resources" class="cs-li-link"> Resources </a>
          </li>
          <li class="cs-li">
            <a href="/faq" class="cs-li-link">FAQ</a>
          </li>
        </ul>
      </div>
    </nav>
    <a href="/#contact" class="cs-button-solid cs-nav-button">Contact Us</a>
    <a
    href="https://wa.me/31615078622"
    target="_blank"
    rel="noopener noreferrer"
    class="cs-whatsapp-button cs-nav-button"
    aria-label="Chat with us on WhatsApp"
  >
    <img src="/whatsapp-icon.svg" alt="WhatsApp" />
    WhatsApp
  </a>  </div>
</header>

<style>
  /*-- -------------------------- -->
<---     Mobile Navigation      -->
<--- -------------------------- -*/
  /* Mobile - 1023px */
  @media only screen and (max-width: 63.9375rem) {
    body.cs-open {
      overflow: hidden;
    }
    #cs-navigation {
      width: 100%;
      /* prevents padding and border from affecting height and width */
      box-sizing: border-box;
      padding: 0.75rem 1rem;
      background-color: #fff;
      box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
      position: sticky;
      top: 0;
      z-index: 10000;
    }
    #cs-navigation:before {
      content: "";
      width: 100%;
      height: 0vh;
      background: rgba(0, 0, 0, 0.6);
      opacity: 0;
      display: block;
      position: absolute;
      top: 100%;
      right: 0;
      z-index: -1100;
      transition:
        height 0.5s,
        opacity 0.5s;
      -webkit-backdrop-filter: blur(10px);
      backdrop-filter: blur(10px);
    }
    #cs-navigation.cs-active:before {
      height: 150vh;
      opacity: 1;
    }
    #cs-navigation.cs-active .cs-ul-wrapper {
      opacity: 1;
      transform: scaleY(1);
      transition-delay: 0.15s;
    }
    #cs-navigation.cs-active .cs-li {
      opacity: 1;
      transform: translateY(0);
    }
    #cs-navigation .cs-container {
      width: 100%;
      display: flex;
      justify-content: flex-end;
      align-items: center;
    }
    #cs-navigation .cs-logo {
      width: 25%;
      max-width: 12rem;
      height: 100%;
      margin: 0 auto 0 0;
      /* prevents padding and border from affecting height and width */
      box-sizing: border-box;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 10;
    }
    #cs-navigation .cs-logo img {
      width: 100%;
      height: 100%;
      /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
      object-fit: contain;
    }
    #cs-navigation .cs-toggle {
      /* 44px - 48px */
      width: clamp(2.75rem, 6vw, 3rem);
      height: clamp(2.75rem, 6vw, 3rem);
      margin: 0 0 0 auto;
      background-color: transparent;
      border: none;
      border-radius: 0.25rem;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    #cs-navigation .cs-active .cs-line1 {
      top: 50%;
      transform: translate(-50%, -50%) rotate(225deg);
    }
    #cs-navigation .cs-active .cs-line2 {
      top: 50%;
      transform: translate(-50%, -50%) translateY(0) rotate(-225deg);
      transform-origin: center;
    }
    #cs-navigation .cs-active .cs-line3 {
      opacity: 0;
      bottom: 100%;
    }
    #cs-navigation .cs-box {
      /* 24px - 28px */
      width: clamp(1.5rem, 2vw, 1.75rem);
      /* 14px - 16px */
      height: clamp(0.875rem, 1.5vw, 1rem);
      position: relative;
    }
    #cs-navigation .cs-line {
      width: 100%;
      height: 2px;
      background-color: #1a1a1a;
      border-radius: 2px;
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
    }
    #cs-navigation .cs-line1 {
      top: 0;
      transition:
        transform 0.5s,
        top 0.3s,
        left 0.3s;
      animation-duration: 0.7s;
      animation-timing-function: ease;
      animation-direction: normal;
      animation-fill-mode: forwards;
      transform-origin: center;
    }
    #cs-navigation .cs-line2 {
      top: 50%;
      transform: translateX(-50%) translateY(-50%);
      transition:
        top 0.3s,
        left 0.3s,
        transform 0.5s;
      animation-duration: 0.7s;
      animation-timing-function: ease;
      animation-direction: normal;
      animation-fill-mode: forwards;
    }
    #cs-navigation .cs-line3 {
      bottom: 0;
      transition:
        bottom 0.3s,
        opacity 0.3s;
    }
    #cs-navigation .cs-ul-wrapper {
      width: 100%;
      height: auto;
      padding-bottom: 2.4em;
      background-color: #fff;
      box-shadow: inset rgba(0, 0, 0, 0.2) 0px 8px 24px;
      opacity: 0;
      position: absolute;
      top: 100%;
      left: 0;
      z-index: -1;
      overflow: hidden;
      transform: scaleY(0);
      transition:
        transform 0.4s,
        opacity 0.3s;
      transform-origin: top;
    }
    #cs-navigation .cs-ul {
      width: 100%;
      height: auto;
      max-height: 65vh;
      margin: 0;
      padding: 3rem 0 0 0;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: center;
      gap: 1.25rem;
      overflow: auto;
    }
    #cs-navigation .cs-li {
      text-align: center;
      list-style: none;
      width: 100%;
      margin-right: 0;
      opacity: 0;
      /* transition from these values */
      transform: translateY(-4.375rem);
      transition:
        transform 0.6s,
        opacity 0.9s;
    }
    #cs-navigation .cs-li:nth-of-type(1) {
      transition-delay: 0.05s;
    }
    #cs-navigation .cs-li:nth-of-type(2) {
      transition-delay: 0.1s;
    }
    #cs-navigation .cs-li:nth-of-type(3) {
      transition-delay: 0.15s;
    }
    #cs-navigation .cs-li:nth-of-type(4) {
      transition-delay: 0.2s;
    }
    #cs-navigation .cs-li:nth-of-type(5) {
      transition-delay: 0.25s;
    }
    #cs-navigation .cs-li:nth-of-type(6) {
      transition-delay: 0.3s;
    }
    #cs-navigation .cs-li:nth-of-type(7) {
      transition-delay: 0.35s;
    }
    #cs-navigation .cs-li:nth-of-type(8) {
      transition-delay: 0.4s;
    }
    #cs-navigation .cs-li:nth-of-type(9) {
      transition-delay: 0.45s;
    }
    #cs-navigation .cs-li:nth-of-type(10) {
      transition-delay: 0.5s;
    }
    #cs-navigation .cs-li:nth-of-type(11) {
      transition-delay: 0.55s;
    }
    #cs-navigation .cs-li:nth-of-type(12) {
      transition-delay: 0.6s;
    }
    #cs-navigation .cs-li:nth-of-type(13) {
      transition-delay: 0.65s;
    }
    #cs-navigation .cs-li-link {
      /* 16px - 24px */
      font-size: clamp(1rem, 2.5vw, 1.5rem);
      line-height: 1.2em;
      text-decoration: none;
      margin: 0;
      color: var(--headerColor);
      display: inline-block;
      position: relative;
    }
    #cs-navigation .cs-li-link:before {
      /* active state underline */
      content: "";
      width: 100%;
      height: 1px;
      background: currentColor;
      opacity: 1;
      display: none;
      position: absolute;
      bottom: -0.125rem;
      left: 0;
    }
    #cs-navigation .cs-li-link.cs-active:before {
      display: block;
    }
    #cs-navigation .cs-button-solid {
      display: none;
    }
  }
  /*-- -------------------------- -->
<---     Navigation Dropdown    -->
<--- -------------------------- -*/
  /* Mobile - 1023px */
  @media only screen and (max-width: 63.9375rem) {
    #cs-navigation .cs-li {
      text-align: center;
      width: 100%;
      display: block;
    }
    #cs-navigation .cs-dropdown {
      color: var(--bodyTextColorWhite);
      position: relative;
    }
    #cs-navigation .cs-dropdown.cs-active .cs-drop-ul {
      height: auto;
      margin: 0.75rem 0 0 0;
      padding: 0.75rem 0;
      opacity: 1;
      visibility: visible;
    }
    #cs-navigation .cs-dropdown.cs-active .cs-drop-link {
      opacity: 1;
    }
    #cs-navigation .cs-dropdown .cs-li-link {
      position: relative;
      transition: opacity 0.3s;
    }
    #cs-navigation .cs-drop-icon {
      width: 0.9375rem;
      height: auto;
      position: absolute;
      top: 50%;
      right: -1.25rem;
      transform: translateY(-50%);
    }
    #cs-navigation .cs-drop-ul {
      width: 100%;
      height: 0;
      margin: 0;
      padding: 0;
      background-color: var(--primary);
      opacity: 0;
      display: flex;
      visibility: hidden;
      flex-direction: column;
      justify-content: flex-start;
      align-items: center;
      gap: 0.75rem;
      overflow: hidden;
      transition:
        padding 0.3s,
        margin 0.3s,
        height 0.3s,
        opacity 0.3s,
        visibility 0.3s;
    }
    #cs-navigation .cs-drop-li {
      list-style: none;
    }
    #cs-navigation .cs-li-link.cs-drop-link {
      /* 14px - 16px */
      font-size: clamp(0.875rem, 2vw, 1.25rem);
      color: #fff;
    }
  }
  /* Desktop - 1024px */
  @media only screen and (min-width: 64rem) {
    #cs-navigation .cs-dropdown {
      position: relative;
    }
    #cs-navigation .cs-dropdown:hover,
    #cs-navigation .cs-dropdown:focus-within {
      cursor: pointer;
    }
    #cs-navigation .cs-dropdown:hover .cs-drop-ul,
    #cs-navigation .cs-dropdown:focus-within .cs-drop-ul {
      opacity: 1;
      visibility: visible;
      transform: scaleY(1);
    }
    #cs-navigation .cs-dropdown:hover .cs-drop-li,
    #cs-navigation .cs-dropdown:focus-within .cs-drop-li {
      opacity: 1;
      transform: translateY(0);
    }
    #cs-navigation .cs-drop-icon {
      width: 0.9375rem;
      height: auto;
      display: inline-block;
    }
    #cs-navigation .cs-drop-ul {
      min-width: 12.5rem;
      margin: 0;
      padding: 0;
      background-color: #fff;
      box-shadow: rgba(149, 157, 165, 0.2) 0px 10px 16px;
      opacity: 0;
      border-bottom: 5px solid var(--primary);
      visibility: hidden;
      /* if you have 8 or more links in your dropdown nav, uncomment the columns property to make the list into 2 even columns. Change it to 3 or 4 if you need extra columns. Then remove the transition delays on the cs-drop-li so they don't have weird scattered animations */
      position: absolute;
      top: 100%;
      z-index: -100;
      overflow: hidden;
      transform: scaleY(0);
      transition:
        transform 0.3s,
        visibility 0.3s,
        opacity 0.3s;
      transform-origin: top;
    }
    #cs-navigation .cs-drop-li {
      font-size: 1rem;
      text-decoration: none;
      list-style: none;
      width: 100%;
      height: auto;
      color: var(--bodyTextColor);
      opacity: 0;
      display: block;
      transform: translateY(-0.625rem);
      transition:
        opacity 0.6s,
        transform 0.6s;
    }
    #cs-navigation .cs-drop-li:nth-of-type(1) {
      transition-delay: 0.05s;
    }
    #cs-navigation .cs-drop-li:nth-of-type(2) {
      transition-delay: 0.1s;
    }
    #cs-navigation .cs-drop-li:nth-of-type(3) {
      transition-delay: 0.15s;
    }
    #cs-navigation .cs-drop-li:nth-of-type(4) {
      transition-delay: 0.2s;
    }
    #cs-navigation .cs-drop-li:nth-of-type(5) {
      transition-delay: 0.25s;
    }
    #cs-navigation .cs-drop-li:nth-of-type(6) {
      transition-delay: 0.3s;
    }
    #cs-navigation .cs-drop-li:nth-of-type(7) {
      transition-delay: 0.35s;
    }
    #cs-navigation .cs-drop-li:nth-of-type(8) {
      transition-delay: 0.4s;
    }
    #cs-navigation .cs-drop-li:nth-of-type(9) {
      transition-delay: 0.45s;
    }
    #cs-navigation .cs-li-link.cs-drop-link {
      font-size: 1rem;
      line-height: 1.5em;
      text-decoration: none;
      white-space: nowrap;
      width: 100%;
      /* prevents padding and border from affecting height and width */
      box-sizing: border-box;
      padding: 0.75rem;
      color: var(--bodyTextColor);
      display: block;
      transition:
        color 0.3s,
        background-color 0.3s;
    }
    #cs-navigation .cs-li-link.cs-drop-link:hover,
    #cs-navigation .cs-li-link.cs-drop-link:focus {
      background-color: #f7f7f7;
      outline: none;
    }
    #cs-navigation .cs-li-link.cs-drop-link:before {
      display: none;
    }
  }
  /*-- -------------------------- -->
<---     Desktop Navigation     -->
<--- -------------------------- -*/
  /* Small Desktop - 1024px */
  @media only screen and (min-width: 64rem) {
    #cs-navigation {
      width: 100%;
      /* prevents padding and border from affecting height and width */
      box-sizing: border-box;
      padding: 0 1rem;
      background-color: #fff;
      box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
      position: sticky;
      top: 0;
      z-index: 10000;
    }
    #cs-navigation .cs-container {
      width: 100%;
      max-width: 80rem;
      margin: auto;
      display: flex;
      justify-content: flex-end;
      align-items: center;
      gap: 1.5rem;
    }
    #cs-navigation .cs-toggle {
      display: none;
    }
    #cs-navigation .cs-logo {
      width: 22%;
      max-width: 26rem;
      height: 5rem;
      /* margin-right auto pushes everything away from it to the right */
      margin: 0 auto 0 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 100;
    }
    #cs-navigation .cs-logo img {
      width: 100%;
      height: 100%;
      /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
      object-fit: contain;
    }
    #cs-navigation .cs-ul {
      width: 100%;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: flex-start;
      align-items: center;
      /* 20px - 36px */
      gap: clamp(1.25rem, 2.6vw, 2.25rem);
    }
    #cs-navigation .cs-li {
      list-style: none;
      padding: 2rem 0;
      /* prevent flexbox from squishing it */
      flex: none;
    }
    #cs-navigation .cs-li-link {
      /* 14px - 16px */
      font-size: clamp(0.975rem, 1vw, 1rem);
      line-height: 1.5em;
      text-decoration: none;
      margin: 0;
      color: var(--bodyTextColor);
      display: block;
      position: relative;
    }
    #cs-navigation .cs-li-link:hover:before {
      width: 100%;
    }
    #cs-navigation .cs-li-link.cs-active:before {
      width: 100%;
    }
    #cs-navigation .cs-li-link:before {
      /* active state underline */
      content: "";
      width: 0%;
      height: 2px;
      background: var(--primary);
      opacity: 1;
      display: block;
      position: absolute;
      bottom: 0rem;
      left: 0;
      transition: width 0.3s;
    }
    #cs-navigation .cs-button-solid {
      font-size: 0.875rem;
      font-weight: 700;
      /* 36px - 42px - reduced from 46px-56px */
      line-height: clamp(2.25em, 4.5vw, 2.625em);
      text-align: center;
      text-decoration: none;
      min-width: 7.5rem;
      margin: 0;
      /* prevents padding from adding to the width */
      box-sizing: border-box;
      padding: 0 1rem;
      color: #fff;
      background-color: var(--primary);
      border-radius: 0.25rem;
      display: inline-block;
      position: relative;
      z-index: 1;
    }
    #cs-navigation .cs-button-solid:before {
      content: "";
      width: 0%;
      height: 100%;
      background: var(--primaryLight);
      opacity: 1;
      border-radius: 0.25rem;
      position: absolute;
      top: 0;
      left: 0;
      z-index: -1;
      transition: width 0.3s;
    }
    #cs-navigation .cs-button-solid:hover:before {
      width: 100%;
    }
  }

  .cs-whatsapp-button {
  font-size: 0.875rem;
  font-weight: 700;
  line-height: clamp(2.25em, 4.5vw, 2.625em);
  text-align: center;
  text-decoration: none;
  min-width: 7.5rem;
  margin: 0;
  box-sizing: border-box;
  padding: 0 1rem;
  color: #fff;
  background-color: var(--primary);
  border-radius: 0.25rem;
  display: inline-block;
  position: relative;
  z-index: 1;
  overflow: hidden;
}

.cs-whatsapp-button:before {
  content: "";
  width: 0%;
  height: 100%;
  background: var(--primaryLight);
  opacity: 1;
  border-radius: 0.25rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: width 0.3s;
}

.cs-whatsapp-button:hover:before {
  width: 100%;
}

.cs-whatsapp-button img {
  width: 16px;
  height: 16px;
  margin-right: 0.4rem;
  vertical-align: middle;
  filter: invert(1); /* Fully inverts the colors */
}



</style>
<script>
  // add classes for mobile navigation toggling
  var CSbody = document.querySelector("body");
  const CSnavbarMenu = document.querySelector("#cs-navigation");
  const CShamburgerMenu = document.querySelector("#cs-navigation .cs-toggle");

  if (CShamburgerMenu && CSnavbarMenu && CSbody) {
    CShamburgerMenu.addEventListener("click", function () {
      CShamburgerMenu.classList.toggle("cs-active");
      CSnavbarMenu.classList.toggle("cs-active");
      if (CSbody) {
        CSbody.classList.toggle("cs-open");
      }
      // run the function to check the aria-expanded value
      ariaExpanded();

      // Add this block to close the menu after selecting an item
      CSnavbarMenu.querySelectorAll(".cs-li-link").forEach(link => {
        link.addEventListener("click", () => {
          if (CShamburgerMenu) {
            CShamburgerMenu.classList.remove("cs-active");
          }
          if (CSnavbarMenu) {
            CSnavbarMenu.classList.remove("cs-active");
          }
          if (CSbody) {
            CSbody.classList.remove("cs-open");
          }
          ariaExpanded();
        });
      });
    });
  }

  // checks the value of aria expanded on the cs-ul and changes it accordingly whether it is expanded or not
  function ariaExpanded() {
    const csUL = document.querySelector("#cs-expanded");
    if (csUL) {
      const csExpanded = csUL.getAttribute("aria-expanded");

      if (csExpanded === "false") {
        csUL.setAttribute("aria-expanded", "true");
      } else {
        csUL.setAttribute("aria-expanded", "false");
      }
    }
  }

  // mobile nav toggle code
  const dropDowns = Array.from(
    document.querySelectorAll("#cs-navigation .cs-dropdown")
  );
  for (const item of dropDowns) {
    const onClick = () => {
      item.classList.toggle("cs-active");
    };
    item.addEventListener("click", onClick);
  }

  // Smooth scrolling for internal links and close mobile menu
  document.addEventListener('DOMContentLoaded', function() {
    const navLinks = document.querySelectorAll('.cs-li-link[href^="/#"]');
    const mobileNavToggle = document.querySelector('.cs-toggle');
    const body = document.body;
    
    navLinks.forEach(link => {
      link.addEventListener('click', function(e) {
        const target = e.target as HTMLAnchorElement;
        const targetId = target.getAttribute('href')?.substring(2); // Remove '/#'
        
        if (targetId) {
          const targetElement = document.getElementById(targetId);
          
          if (targetElement) {
            // Element exists on current page - use smooth scrolling
            e.preventDefault();
            
            // Close mobile menu if open
            if (body.classList.contains('cs-open')) {
              body.classList.remove('cs-open');
              ariaExpanded();
            }
            
            // Smooth scroll to target
            targetElement.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          } else {
            // Element doesn't exist - allow normal navigation to home page
            // Don't prevent default, let the browser navigate normally
            if (body.classList.contains('cs-open')) {
              body.classList.remove('cs-open');
              ariaExpanded();
            }
          }
        }
      });
    });
  });
</script>
