<!doctype html>
<html lang="en" id="home">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Hero Section with Parallax and Zoom Effect</title>
  </head>
  <body>
    <section class="hero">
      <div class="hero-bg">
        <video
          class="hero-video"
          autoplay
          muted
          loop
          playsinline
          preload="auto"
          id="heroVideo"
        >
          <source src="/DigitalVideo.mp4" type="video/mp4">
          Your browser does not support the video tag.
        </video>
      </div>
      <div class="hero-content">
        <h1 class="hero-title">
          Digital Solutions & IT Consulting for Your Business Success
        </h1>
        <p class="hero-subtitle">Expert digital services, project management solutions, and networking solutions to transform your business</p>
        <button class="hero-button" onclick="location.href='#services-343'"
          >Discover Our Services</button
        >
      </div>
    </section>
    
    <script>
      // Smooth slow-down and pause effect - stays paused until page reload
      document.addEventListener('DOMContentLoaded', function() {
        const video = document.getElementById('heroVideo');
        if (video && video instanceof HTMLVideoElement) {
          let isSlowingDown = false;
          let normalPlaybackRate = 1.0;
          const slowDownDuration = 2.5; // Start slowing down 2.5 seconds before end
          
          // Remove the loop attribute - we'll handle it manually
          video.removeAttribute('loop');
          
          // Attempt to play the video
          const playPromise = video.play();
          
          if (playPromise !== undefined) {
            playPromise.catch(error => {
              console.log('Video autoplay prevented:', error);
            });
          }

          // Smooth slow-down effect
          video.addEventListener('timeupdate', function() {
            const videoDuration = video.duration;
            const currentTime = video.currentTime;
            const timeRemaining = videoDuration - currentTime;
            
            // Start slowing down in the last few seconds
            if (timeRemaining <= slowDownDuration && timeRemaining > 0.1 && !isSlowingDown) {
              isSlowingDown = true;
              // Calculate playback rate based on time remaining
              // Gradually slow from 1.0 to 0.0
              const slowdownProgress = 1 - (timeRemaining / slowDownDuration);
              const newRate = normalPlaybackRate * (1 - slowdownProgress);
              video.playbackRate = Math.max(0.1, newRate); // Don't go below 0.1
            } else if (timeRemaining <= 0.1 && isSlowingDown) {
              // Video has reached the end, pause it permanently
              video.pause();
              isSlowingDown = false;
              // Stay paused until page reload - no automatic restart
            } else if (!isSlowingDown && video.playbackRate !== normalPlaybackRate) {
              // Reset playback rate if we're not in slow-down phase
              video.playbackRate = normalPlaybackRate;
            }
          });
        }
      });
    </script>
  </body>
</html>

<style>
  .hero {
    position: relative;
    padding: 150px 20px;
    text-align: center;
    color: white;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    overflow: hidden;
    background-attachment: fixed; /* Parallax effect */
  }

  .hero-bg {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-attachment: fixed; /* Parallax effect */
    animation: zoomIn 0.5s;
    z-index: 0;
  }

  .hero-video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 1;
  }

  @keyframes zoomIn {
    0% {
      transform: scale(1.05);
    }
    100% {
      transform: scale(1);
    }
  }

  .hero::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1;
  }

  .hero::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    /* background-image: linear-gradient(
        90deg,
        rgba(180, 180, 180, 0.2) 1px,
        transparent 1px
      ),
      linear-gradient(rgba(180, 180, 180, 0.2) 1px, transparent 1px);
    background-size: 400px 400px; */
    z-index: 2;
  }

  .hero-content {
    position: relative;
    z-index: 3;
    max-width: 800px;
    margin: 0 auto;
  }

  .hero-title {
    font-size: 3em;
    margin-bottom: 0.5em;
    line-height: 1.2;
    font-weight: bold;
  }

  .hero-subtitle {
    font-size: 1.5em;
    margin-bottom: 1.5em;
    font-weight: 300;
  }

  .hero-button {
    background-color: var(--primary);
    border: 2px solid white;
    padding: clamp(10px, 2vw, 15px) clamp(20px, 4vw, 30px); /* Responsive padding */
    font-size: clamp(1em, 2vw, 1.2em); /* Responsive font size */
    font-weight: bold;
    color: white;
    cursor: pointer;
    text-transform: capitalize;
    transition: all 0.3s ease;
    border-radius: 5px;
  }
  .hero-button:hover {
    background-color: var(--primaryLight);
    border-color: var(--primaryLight);
    transform: translateY(-2px);
  }

  @media (max-width: 768px) {
    .hero-title {
      font-size: 2.5em;
    }

    .hero-subtitle {
      font-size: 1.2em;
    }

    .hero-bg {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-attachment: relative; /* Parallax effect */
      animation: zoomIn 2.5s;
      z-index: 0;
    }

    .hero-video {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
      z-index: 1;
    }
  }

  @media (max-width: 480px) {
    .hero-title {
      font-size: 2em;
    }

    .hero-subtitle {
      font-size: 1em;
    }
  }
</style>
